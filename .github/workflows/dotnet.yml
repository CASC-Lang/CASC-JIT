name: Publish

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.100'
    - name: Build
      shell: bash
      run: |
        # Define some variables for things we need
        tag=$(git describe --tags --abbrev=0)
        release_name="CASC-Console-$tag-${{ matrix.target }}"

        # Build everything
        dotnet publish CASC-Console/CASC-Console.csproj --framework netcoreapp5.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi

        # Delete output directory
        rm -r "$release_name"
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "CASC-Console*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        DISCORD_EMBEDS: toJson($EMBED_JSON)
      uses: Ilshidur/action-discord@master
      with:
        args: '{{ EVENT_PAYLOAD.repository.full_name }} has a new release: ${{ github.ref }}!'
